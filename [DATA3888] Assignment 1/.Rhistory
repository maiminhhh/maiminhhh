dea3_fit = dea3_fit |> eBayes()
# output the result
dea3 = topTable(dea3_fit, adjust.method = 'fdr', number = nrow(dea3_fit),
genelist = rownames(dea3_fit) |> as.numeric())
# transfer gene id into gene symbol
gene_symbol = c()
id = dea3$ID
for (i in id) {
gene_symbol = append(gene_symbol, filter(gDict, gene_id == i)$gene_symbol)
}
dea3 = dea3 |> signif(3)
dea3$ID = gene_symbol
colnames(dea3)[1] = 'symbol'
dea3 |> datatable()
# extract the cadi12 score for differential expression analysis
dea12_cadi = pData1$cadi12_cat
# exclude the samples whose cadi12 is not recorded
dea12_noNA_samples = pData1$geo_accession[!is.na(dea12_cadi)]
# filter out the non-observed value of cadi12
dea12_noNA_cadi = dea12_cadi[!is.na(dea12_cadi)]
# exclude the samples without a recorded cadi12 from the expression matrix
dea12_eMat = (eMat1[,dea12_noNA_samples])
# create a design matrix based on cadi12
dea12_design = model.matrix(~dea12_noNA_cadi)
# perform limma on cadi12 to test for differential expression on reject and stable cadi12
dea12_fit = lmFit(dea12_eMat, dea12_design)
dea12_fit = dea12_fit |> eBayes()
# output table
dea12 = dea12_fit |> topTable(n = Inf, adjust.method = 'fdr',
genelist = dea12_fit |> rownames() |> as.numeric())
# transfer gene id into gene symbol
gene_symbol = c()
id = dea12$ID
for (i in id) {
gene_symbol = append(gene_symbol, filter(gDict, gene_id == i)$gene_symbol)
}
# round to 3 decimal points
dea12_rounded = dea12 |> signif(3)
dea12_rounded$ID = gene_symbol
colnames(dea12_rounded)[1] = 'symbol'
# store the result of differential expression analysis for cadi 12
dea12$ID = gene_symbol
colnames(dea12)[1] = 'symbol'
# printing out the top table of limma for cadi 12
dea12_rounded |> datatable()
# significant genes have either:
## adjusted p value < 0.05
# or
## adjusted p value < 0.1 and:
### more significant log FC, i.e. abs(logFC) > 0.5
# or
### more significant average expression, i.e. aveexpr > 12.5
dea12$significant = with(dea12, adj.P.Val < 0.05 |
(adj.P.Val < 0.1 & abs(logFC) > 0.5) |
(adj.P.Val < 0.1 & AveExpr > 12.5))
# transfer gene id into gene symbol
gene_symbol = c()
# draw MA plot of cadi12
maPlot_cadi12 =
ggplot(dea12, aes(x = AveExpr, y = logFC, tooltip = symbol, data_id = symbol)) +
geom_point(aes(colour = significant), alpha = 1/3, size = 1) +
geom_point_interactive(data = subset(dea12, significant == 'TRUE'),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(y = 'log 2 fold change', x = 'Average expression')
volcano_cadi12 =
ggplot(dea12, aes(logFC, -log10(P.Value),
tooltip = symbol, data_id = symbol, colour = significant)) +
geom_point(alpha = 0.6, size = 1) +
geom_point_interactive(data = subset(dea12, significant == TRUE),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(x = 'log2 fold change', y = '-log10 p-value') +
theme_minimal()
combined_cadi12 = volcano_cadi12 + maPlot_cadi12 + plot_layout(ncol = 2)
girafe(code = print(combined_cadi12))
# significant genes have either:
## adjusted p value < 0.05
# or
## adjusted p value < 0.1 and:
### more significant log FC, i.e. abs(logFC) > 0.5
# or
### more significant average expression, i.e. aveexpr > 12.5
dea12$significant = with(dea12, adj.P.Val < 0.05 |
(adj.P.Val < 0.1 & abs(logFC) > 0.5) |
(adj.P.Val < 0.1 & AveExpr > 12.5))
# draw MA plot of cadi12
maPlot_cadi12 =
ggplot(dea12, aes(x = AveExpr, y = logFC, tooltip = symbol, data_id = symbol)) +
geom_point(aes(colour = significant), alpha = 1/3, size = 1) +
geom_point_interactive(data = subset(dea12, significant == 'TRUE'),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(y = 'log 2 fold change', x = 'Average expression',
title = 'MA plot for differential expression analysis regarding CADI at month 12')
volcano_cadi12 =
ggplot(dea12, aes(logFC, -log10(P.Value),
tooltip = symbol, data_id = symbol, colour = significant)) +
geom_point(alpha = 0.6, size = 1) +
geom_point_interactive(data = subset(dea12, significant == TRUE),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(x = 'log2 fold change', y = '-log10 p-value',
title = 'Volcano plot for differential expression analysis regarding CADI at month 12') +
theme_minimal()
combined_cadi12 = volcano_cadi12 + maPlot_cadi12 + plot_layout(ncol = 2)
girafe(code = print(combined_cadi12))
# significant genes have either:
## adjusted p value < 0.05
# or
## adjusted p value < 0.1 and:
### more significant log FC, i.e. abs(logFC) > 0.5
# or
### more significant average expression, i.e. aveexpr > 12.5
dea12$significant = with(dea12, adj.P.Val < 0.05 |
(adj.P.Val < 0.1 & abs(logFC) > 0.5) |
(adj.P.Val < 0.1 & AveExpr > 12.5))
# draw MA plot of cadi12
maPlot_cadi12 =
ggplot(dea12, aes(x = AveExpr, y = logFC, tooltip = symbol, data_id = symbol)) +
geom_point(aes(colour = significant), alpha = 1/3, size = 1) +
geom_point_interactive(data = subset(dea12, significant == 'TRUE'),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(y = 'log 2 fold change', x = 'Average expression',
title = 'MA plot')
volcano_cadi12 =
ggplot(dea12, aes(logFC, -log10(P.Value),
tooltip = symbol, data_id = symbol, colour = significant)) +
geom_point(alpha = 0.6, size = 1) +
geom_point_interactive(data = subset(dea12, significant == TRUE),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(x = 'log2 fold change', y = '-log10 p-value',
title = 'Volcano plot') +
theme_minimal()
combined_cadi12 = volcano_cadi12 + maPlot_cadi12 + plot_layout(ncol = 2) +
title('Plots performing differential expression analysis regarding CADI month 12')
combined_cadi12 = volcano_cadi12 + maPlot_cadi12 + plot_layout(ncol = 2) #+
#title('Plots performing differential expression analysis regarding CADI month 12')
girafe(code = print(combined_cadi12))
combined_cadi12 = volcano_cadi12 + maPlot_cadi12 + plot_layout(ncol = 2) +
plot_annotation(
title = "Plots Performing Differential Expression Analysis Regarding CADI Month 12")
girafe(code = print(combined_cadi12))
# significant genes have either:
## adjusted p value < 0.05
# or
## adjusted p value < 0.1 and:
### more significant log FC, i.e. abs(logFC) > 0.5
# or
### more significant average expression, i.e. aveexpr > 12.5
dea12$significant = with(dea12, adj.P.Val < 0.05 |
(adj.P.Val < 0.1 & abs(logFC) > 0.5) |
(adj.P.Val < 0.1 & AveExpr > 12.5))
# draw MA plot of cadi12
maPlot_cadi12 =
ggplot(dea12, aes(x = AveExpr, y = logFC, tooltip = symbol, data_id = symbol)) +
geom_point(aes(colour = significant), alpha = 1/3, size = 1) +
geom_point_interactive(data = subset(dea12, significant == 'TRUE'),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(y = 'log 2 fold change', x = 'Average expression',
subtitle = 'MA plot')
volcano_cadi12 =
ggplot(dea12, aes(logFC, -log10(P.Value),
tooltip = symbol, data_id = symbol, colour = significant)) +
geom_point(alpha = 0.6, size = 1) +
geom_point_interactive(data = subset(dea12, significant == TRUE),
aes(colour = significant)) +
scale_colour_manual(values = c('TRUE' = 'red', 'FALSE' = 'blue')) +
labs(x = 'log2 fold change', y = '-log10 p-value',
subtitle = 'Volcano plot') +
theme_minimal()
combined_cadi12 = volcano_cadi12 + maPlot_cadi12 + plot_layout(ncol = 2) +
plot_annotation(
title = "Plots Performing Differential Expression Analysis Regarding CADI Month 12")
girafe(code = print(combined_cadi12))
filter(dea12, significant == TRUE)$symbol
dea12 |> rownames()
significant_dea2 = dea12 |> filter(significant == TRUE)
significant_dea12
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12
significant_dea12_id = significant_dea12 |> rownames()
significant_dea12_id
eMat1_significant_dea12 = eMat1[significant_dea12_id, ]
eMat1_significant_dea12 |> dim()
eMat1_significant_dea12 = eMat1[significant_dea12_id, ] |> t()
eMat1_significant_dea12
patients_dea12 = rownames(eMat1_significant_dea12)
cadi12 =
pData1
pData1
cadi12 = pData1[patients_dea12, ]
cadi12
cadi12 = pData1[patients_dea12, ]$cadi12_cat
cadi12
dea12_noNA_cadi
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
patients_dea12 = rownames(eMat1_significant_dea12)
eMat1_significant_dea12
eMat1_significant_dea12 |> dim()
dea12_noNA_cadi |> length()
dea12_boxplot = dea12_eMat
dea12_boxplot$cadi12 = dea12_noNA_cadi
dea12_boxplot
dea12_eMat
dea12_boxplot = dea12_eMat |> data.frame()
dea12_boxplot
dea12_boxplot$cadi12 = dea12_noNA_cadi
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
dea12_boxplot
dea12_boxplot$cadi12 = dea12_noNA_cadi
dea12_boxplot
ggplot(data = dea12_boxplot, aes(x = X2371139)) + geom_boxplot()
ggplot(data = dea12_boxplot, aes(x = X2371139, color = cadi12)) + geom_boxplot()
ggplot(data = dea12_boxplot, aes(y = X2371139, color = cadi12)) + geom_boxplot()
# install.packages("BiocManager")
# BiocManager::install("GEOquery")
# BiocManager::install("limma")
library(GEOquery)
library(R.utils)
library(reshape2)
library(ggplot2)
library(limma)
library(dplyr)
gse <- getGEO("GSE46474")
gse <- gse$GSE46474_series_matrix.txt.gz
load("data/GSE46474.RData")
gse
head(pData(gse))
f = (fData(gse))
head(exprs(gse))
eMat = exprs(gse)
# clean up outcome
gse$Outcome <- ifelse(grepl("AR", gse$title), "Rejection", "Stable")
table(gse$Outcome)
eMat = exprs(gse)
table(gse$Outcome)
dim(gse)
dim(eMat)
dim(pData(gse))
dim(fData(gse))
summary(eMat[,1])
hist(eMat[, 1])
write.csv(exprs(gse), "GSE46474_expression_matrix.txt")
library(reshape2)
p <- ggplot(melt(exprs(gse)), aes(x=Var2, y=value)) +
geom_boxplot(outlier.colour="black", outlier.shape=16,outlier.size=0.5, notch=FALSE) +
theme(axis.text.x = element_text(angle = 180, hjust = 1)) +
labs (x = "Patient", y = "Expression value") +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
p
summary(melt(exprs(gse))$value)
# reshape2::melt(exprs(gse))
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
dea12_boxplot$cadi12 = dea12_noNA_cadi
dea12_ggplots = c()
for (gene in colnames(dea12_boxplot)) {
box = ggplot(data = dea12_boxplot, aes(y = gene, color = cadi12)) + geom_boxplot()
dea12_ggplots = append(dea12_ggplots, box())
}
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
dea12_boxplot$cadi12 = dea12_noNA_cadi
dea12_ggplots = c()
for (gene in colnames(dea12_boxplot)) {
box = ggplot(data = dea12_boxplot, aes(y = gene, color = cadi12)) + geom_boxplot()
dea12_ggplots = append(dea12_ggplots, box)
}
gene1_box = ggplot(data = dea12_boxplot, aes(y = X2371139, color = cadi12)) + geom_boxplot()
gene2_box = ggplot(data = dea12_boxplot, aes(y = ))
dea12_ggplots
combined_plots <- wrap_plots(dea12_ggplots, nrow = 1)
dea12_ggplots |> class()
dea12_ggplots[1] |> class()
dea12_ggplots[1] |> class()
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
long_data
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 2)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
dea12_boxplot$cadi12 = dea12_noNA_cadi
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
long_data$cadi12 = dea12_noNA_cadi
long_data |> class()
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 2)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
combined_plots <- wrap_plots(plot_list, nrow = 1)  # Adjust ncol to fit your layout
combined_plots <- wrap_plots(plot_list, nrow = 1)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 4)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 5)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 2)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
combined_plots <- wrap_plots(plot_list, ncol = 2)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
combined_plots <- wrap_plots(plot_list, ncol = 2)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 5)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 4)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = Gene, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal()
})
combined_plots <- wrap_plots(plot_list, ncol = 2)  # Adjust ncol to fit your layout
# Display the combined plot
combined_plots
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
# Reshape the data
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
# Generate individual plots without legends
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = dea12_noNA_cadi, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal() +
theme(legend.position = "none")  # Remove individual legends
})
# Create a common legend plot (use any plot with legend)
legend_plot <- ggplot(long_data, aes(x = dea12_noNA_cadi, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "bottom")  # Set legend position
# Extract legend
legend <- get_legend(legend_plot)
library(janitor)
library(tidyverse)
library(naniar)
library(limma)
library(tidyverse)
library(Biobase)
library(edgeR)
library(DT)
library(ggiraph)
library(glue)
library(gridExtra)
library(patchwork)
?getDLLRegisteredRoutines.DLLInfo
??getlegend
library(ggpubr)
significant_dea12 = dea12 |> filter(significant == TRUE)
significant_dea12_id = significant_dea12 |> rownames()
eMat1_significant_dea12 = dea12_eMat[significant_dea12_id, ] |> t()
dea12_boxplot = eMat1_significant_dea12 |> data.frame()
# Reshape the data
long_data <- dea12_boxplot %>%
pivot_longer(cols = everything(), names_to = "Gene", values_to = "Expression")
# Generate individual plots without legends
plot_list <- lapply(unique(long_data$Gene), function(gene) {
ggplot(subset(long_data, Gene == gene), aes(x = dea12_noNA_cadi, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
ggtitle(paste("Boxplot for", gene)) +
theme_minimal() +
theme(legend.position = "none")  # Remove individual legends
})
# Create a common legend plot (use any plot with legend)
legend_plot <- ggplot(long_data, aes(x = dea12_noNA_cadi, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "bottom")  # Set legend position
# Extract legend
legend <- get_legend(legend_plot)
legend_plot <- ggplot(long_data, aes(x = dea12_noNA_cadi, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "bottom")  # Set legend position
legend_plot
# Create a common legend plot (use any plot with legend)
legend_plot <- ggplot(long_data, aes(x = long_data, y = Expression, color = dea12_noNA_cadi)) +
geom_boxplot() +
theme_minimal() +
theme(legend.position = "bottom")  # Set legend position
legend_plot
# extract the cadi3 score for differential expression analysis
dea3_cadi = pData1$cadi3_cat
# exclude the samples whose cadi3 is not recorded
dea3_noNA_samples = pData1$geo_accession[!is.na(dea3_cadi)]
# filter out the non-observed value of cadi3
dea3_noNA_cadi = dea3_cadi[!is.na(dea3_cadi)]
# exclude the samples without a recorded cadi3 from the expression matrix
dea3_eMat = eMat1[,dea3_noNA_samples]
# create a design matrix based on cadi3
dea3_design = model.matrix(~dea3_noNA_cadi)
# perform limma on cadi3 to test for differential expression on reject and stable cadi3
dea3_fit = lmFit(dea3_eMat, dea3_design)
dea3_fit = dea3_fit |> eBayes()
# output the result
dea3 = topTable(dea3_fit, adjust.method = 'fdr', number = nrow(dea3_fit),
genelist = rownames(dea3_eMat |> data.frame()))
# transfer gene id into gene symbol
gene_symbol = c()
id = dea3$ID
for (i in id) {
gene_symbol = append(gene_symbol, filter(gDict, gene_id == i)$gene_symbol)
}
